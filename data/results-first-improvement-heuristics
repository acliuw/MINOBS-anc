#######################################

Here we try some first improvement schemes for the greedy hill-climbing over the space of DAGs. 
This should theoretically be able to reduce the search time for an "improving" parent set. P is an 
"improving" parent set for V if replacing the current parent set of V with P strictly increases the
number of satisfied ancestral constraints. 


We consider three lines of approach to a first improvement scheme.

- Regular first improvement (RFI):
   Create an initial list of all possible parent sets and sort by increasing score. In the hill-climbing
   method, we iterate this list in order and stop when we find the first improving parent set.

- Move-to-front First Improvement (MTF-FI):
   Stop after finding the first improving parent set,
   and move it to the front of the linked-list.

- Transpose First Improvement (TFI):
   Same as MTF-FI but after an improving parent set is found, swap it with it's predecessor in the linked-list. 


Move-to-front and Transpose both help to prune away parent sets that rarely or never help to satisfy additional ancestral constraints by gradually moving them to the back of the list. An improving parent set is likely to be an improving parent set again in the future. Keeping the more promising parent sets
at the beginning of the list may help to drastically reduce the search time for an improving parent set.


#######################################

We can also consider a similar method where we use MTF/transpose heuristics on an ordering for the variables. 


#######################################

Experiment: 

Run each method for 120 seconds on each test case. Record the accuracy of the final answer and the number of generations completed. 

#######################################

Regular First Improvement. 

asia

1) 